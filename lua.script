    discovery.lua: |
      actions = {}
      actions["do-things"] = {}
      return actions
    definitions:
    
    - name: do-things
      action.lua: |
        -- Create a new ConfigMap
        cm1 = {}
        cm1.apiVersion = "v1"
        cm1.kind = "ConfigMap"
        cm1.metadata = {}
        cm1.metadata.name = "cm1"
        cm1.metadata.namespace = obj.metadata.namespace
        cm1.metadata.labels = {}
        -- Copy ArgoCD tracking label so that the resource is recognized by the App
        cm1.metadata.labels["app.kubernetes.io/instance"] = obj.metadata.labels["app.kubernetes.io/instance"]
        cm1.metadata.annotations = {}
        -- For Apps with auto-prune, set the prune false on the resource, so it does not get deleted
        cm1.metadata.annotations["argocd.argoproj.io/sync-options"] = "Prune=false"
        -- Keep the App synced even though it has a resource that is not in Git
        cm1.metadata.annotations["argocd.argoproj.io/compare-options"] = "IgnoreExtraneous"
        cm1.data = {}
        cm1.data.myKey1 = "myValue1"
        impactedResource1 = {}
        impactedResource1.operation = "create"
        impactedResource1.resource = cm1

        -- Patch the original cm
        obj.metadata.labels["aKey"] = "aValue"
        impactedResource2 = {}
        impactedResource2.operation = "patch"
        impactedResource2.resource = obj

        result = {}
        result[1] = impactedResource1
        result[2] = impactedResource2
        return result

